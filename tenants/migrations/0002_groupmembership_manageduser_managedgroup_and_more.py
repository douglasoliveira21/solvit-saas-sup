# Generated by Django 4.2.7 on 2025-08-30 19:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['group__name', 'user__user__username'],
            },
        ),
        migrations.CreateModel(
            name='ManagedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_id', models.CharField(blank=True, help_text='ID no sistema externo', max_length=255)),
                ('source', models.CharField(choices=[('M365', 'Microsoft 365'), ('AD', 'Active Directory Local'), ('MANUAL', 'Criado Manualmente')], default='MANUAL', max_length=10)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('department', models.CharField(blank=True, max_length=255)),
                ('job_title', models.CharField(blank=True, max_length=255)),
                ('manager_email', models.EmailField(blank=True, max_length=254)),
                ('office_location', models.CharField(blank=True, max_length=255)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_users', to='tenants.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='ManagedGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('external_id', models.CharField(blank=True, help_text='ID no sistema externo', max_length=255)),
                ('source', models.CharField(choices=[('M365', 'Microsoft 365'), ('AD', 'Active Directory Local'), ('MANUAL', 'Criado Manualmente')], default='MANUAL', max_length=10)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('members', models.ManyToManyField(related_name='groups', through='tenants.GroupMembership', to='tenants.manageduser')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_groups', to='tenants.tenant')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='M365Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('azure_tenant_id', models.CharField(help_text='Azure AD Tenant ID', max_length=255)),
                ('client_id', models.CharField(help_text='Application (client) ID', max_length=255)),
                ('client_secret', models.CharField(help_text='Client secret', max_length=500)),
                ('redirect_uri', models.URLField(help_text='Redirect URI configurado no Azure AD')),
                ('sync_enabled', models.BooleanField(default=False)),
                ('sync_interval_minutes', models.PositiveIntegerField(default=60)),
                ('sync_users', models.BooleanField(default=True)),
                ('sync_groups', models.BooleanField(default=True)),
                ('user_filter', models.TextField(blank=True, help_text='Filtro OData para usu√°rios')),
                ('group_filter', models.TextField(blank=True, help_text='Filtro OData para grupos')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_status', models.CharField(blank=True, choices=[('SUCCESS', 'Sucesso'), ('ERROR', 'Erro'), ('RUNNING', 'Executando')], max_length=20, null=True)),
                ('last_sync_message', models.TextField(blank=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='m365_config', to='tenants.tenant')),
            ],
            options={
                'ordering': ['tenant__name'],
            },
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.managedgroup'),
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.manageduser'),
        ),
        migrations.AddIndex(
            model_name='manageduser',
            index=models.Index(fields=['tenant', 'source'], name='tenants_man_tenant__6c55e4_idx'),
        ),
        migrations.AddIndex(
            model_name='manageduser',
            index=models.Index(fields=['external_id'], name='tenants_man_externa_2852d0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='manageduser',
            unique_together={('tenant', 'user')},
        ),
        migrations.AddIndex(
            model_name='managedgroup',
            index=models.Index(fields=['tenant', 'source'], name='tenants_man_tenant__97ac2b_idx'),
        ),
        migrations.AddIndex(
            model_name='managedgroup',
            index=models.Index(fields=['external_id'], name='tenants_man_externa_46f8eb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='managedgroup',
            unique_together={('tenant', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('group', 'user')},
        ),
    ]
