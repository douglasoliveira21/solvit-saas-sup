# Generated by Django 4.2.7 on 2025-08-30 20:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tenants', '0003_adconfiguration'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_sensitive', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('success', models.BooleanField(default=False)),
                ('failure_reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['username', '-created_at'], name='core_logina_usernam_bbb774_idx'), models.Index(fields=['ip_address', '-created_at'], name='core_logina_ip_addr_749dbd_idx'), models.Index(fields=['success', '-created_at'], name='core_logina_success_171c34_idx')],
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('permissions', models.JSONField(default=list)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_apikey_set', to='tenants.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='core_passwo_user_id_c19029_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('CREATE', 'Criar'), ('UPDATE', 'Atualizar'), ('DELETE', 'Deletar'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('SYNC', 'Sincronização'), ('ERROR', 'Erro')], max_length=20)),
                ('resource_type', models.CharField(choices=[('USER', 'Usuário'), ('GROUP', 'Grupo'), ('TENANT', 'Tenant'), ('AGENT', 'Agente'), ('SYSTEM', 'Sistema')], max_length=20)),
                ('resource_id', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='core_auditlog_set', to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_auditlog_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['tenant', 'action'], name='core_auditl_tenant__f59c2a_idx'), models.Index(fields=['resource_type', 'resource_id'], name='core_auditl_resourc_a674ad_idx'), models.Index(fields=['created_at'], name='core_auditl_created_dc23ea_idx'), models.Index(fields=['user'], name='core_auditl_user_id_2ff9b7_idx')],
            },
        ),
    ]
